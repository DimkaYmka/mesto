(()=>{"use strict";function e(e,t){e.textContent=t}var t={selectorList:".elements__card",selectorTemplate:"#card",cardImgSelector:".elements__image",cardTitleSelector:".elements__title",cardDeleteBtnSelector:".elements__delete-button",toggleLikeSelector:".elements__vector",activeLikeBtnClass:"elements__vector_active",countLikes:".elements__likes-number"},n={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"};function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,u(r.key),r)}}function i(e,t,n){return(t=u(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e){var t=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===r(t)?t:String(t)}var a=function(){function e(t,n,r,o,u,a){var c=this,l=u.handleLikeCard,s=a.handleDeleteCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_deleteCardForSure",(function(){c._handleDeleteCard(c._cardData,c)})),i(this,"_getCardLike",(function(){c._likes.some((function(e){return e._id===c._userId}))?(c._likeButton.classList.add("elements__vector_active"),c.isLiked=!0):c._likeButton.classList.remove("elements__vector_active")})),i(this,"getLikesNumber",(function(e){c._likeNumber.innerHTML=e})),i(this,"likeCard",(function(){c._likeButton.classList.toggle("elements__vector_active")})),i(this,"_setDeleteButton",(function(){c._cardOwner===c._userId&&c._deleteButton.classList.remove("elements__delete-button_hidden")})),this._cardData=t,this._name=t.name,this._link=t.link,this._config=n,this._handleCardClick=r,this._userId=o,this._handleLikeCard=l,this._likes=t.likes,this._handleDeleteCard=s,this._cardOwner=t.owner._id}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._config.selectorTemplate).content.querySelector(".elements__card").cloneNode(!0)}},{key:"deleteCard",value:function(){this._element.remove()}},{key:"_toggleLike",value:function(e){e.classList.toggle(this._config.activeLikeBtnClass)}},{key:"_setEventListeners",value:function(){var e=this,t=this._element.querySelector(this._config.cardDeleteBtnSelector),n=this._element.querySelector(this._config.toggleLikeSelector);t.addEventListener("click",(function(){e._deleteCardForSure()})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)})),n.addEventListener("click",(function(){e._handleLikeCard(e._cardData)}))}},{key:"createNewCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(this._config.cardImgSelector),this._cardImage.src=this._link,this._cardImage.alt=" ".concat(this._link,"."),this._element.querySelector(this._config.cardTitleSelector).textContent=this._name,this._likeButton=this._element.querySelector(this._config.toggleLikeSelector),this._likeNumber=this._element.querySelector(this._config.countLikes),this._likes=this._cardData.likes,this._likeNumber.innerHTML=this._likes.length,this.isLiked=!1,this._deleteButton=this._element.querySelector(this._config.cardDeleteBtnSelector),this._setDeleteButton(),this._setEventListeners(),this._getCardLike(),this.getLikesNumber(this._likes.length),this._element}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===c(o)?o:String(o)),r)}var o}var s=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formSetting=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._formSetting.inputSelector)),this._submitButton=this._formElement.querySelector(this._formSetting.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._formSetting.inputErrorClass),n.textContent=t,n.classList.add(this._formSetting.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));t.textContent="",e.classList.remove(this._formSetting.inputErrorClass),t.classList.remove(this._formSetting.errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"resetValidation",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._submitButton.classList.add(this._formSetting.inactiveButtonClass),this._submitButton.disabled=!0):(this._submitButton.classList.remove(this._formSetting.inactiveButtonClass),this._submitButton.disabled=!1)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==f(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==f(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===f(o)?o:String(o)),r)}var o}var y=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){return t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function h(e){return h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},h(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==h(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==h(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===h(o)?o:String(o)),r)}var o}var m=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_opened")&&e.close(),t.target.classList.contains("popup__close-popup")&&e.close()}))}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==_(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==_(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===_(o)?o:String(o)),r)}var o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._popupBigImage=t._popup.querySelector(".popup__big-image"),t._popupTitle=t._popup.querySelector(".popup__big-title"),t}return t=u,(n=[{key:"open",value:function(e,t){b(S(u.prototype),"open",this).call(this),this._popupBigImage.src=t,this._popupBigImage.alt=e,this._popupTitle.textContent=e}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(m);function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,T(r.key),r)}}function L(e,t){return L=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},L(e,t)}function O(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=j(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},P.apply(this,arguments)}function j(e){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},j(e)}function C(e,t,n){return(t=T(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function T(e){var t=function(e,t){if("object"!==w(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===w(t)?t:String(t)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j(r);if(o){var n=j(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return O(e)}(this,e)});function u(e,t,n){var r,o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),C(O(o=i.call(this,e)),"_getInputValues",(function(){var e={};return o._inputList.forEach((function(t){e[t.name]=t.value})),e})),C(O(o),"setEventListeners",(function(){P((r=O(o),j(u.prototype)),"setEventListeners",r).call(r),o._form.addEventListener("submit",(function(e){e.preventDefault(),o._handleProfileFormSubmit(o._getInputValues(),o._btnForm)}))})),o._handleProfileFormSubmit=t,o._form=o._popup.querySelector(".popup__form"),o._inputList=o._form.querySelectorAll(".popup__input"),o._btnForm=o._form.querySelector(n),o}return t=u,(n=[{key:"getInputValues",value:function(){return this._inputFormValues}},{key:"close",value:function(){P(j(u.prototype),"close",this).call(this),this._form.reset()}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(m);function B(e){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},B(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==B(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==B(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===B(o)?o:String(o)),r)}var o}var R=function(){function e(t){var n=t.profileNameSelector,r=t.profileInfoSelector,o=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._info=document.querySelector(r),this._userAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,info:this._info.textContent}}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._info.textContent=e.about}},{key:"setUserAvatar",value:function(e){var t=e.link;this._userAvatar.src=t}}])&&q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==D(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==D(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key),"symbol"===D(o)?o:String(o)),r)}var o}var x=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=t.baseUrl,this._headers=t.headers}var t,n;return t=e,(n=[{key:"_getResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then(this._getResponse)}},{key:"getUserData",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then(this._getResponse)}},{key:"editUserData",value:function(e){return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._getResponse)}},{key:"createCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._getResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e._id,"/likes"),{method:"PUT",headers:this._headers,body:JSON.stringify(e)}).then(this._getResponse)}},{key:"deleteLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._getResponse)}},{key:"editUserAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._getResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._getResponse)}}])&&U(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function N(e){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},N(e)}function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,M(r.key),r)}}function A(e,t){return A=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},A(e,t)}function F(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function H(){return H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},H.apply(this,arguments)}function J(e){return J=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},J(e)}function M(e){var t=function(e,t){if("object"!==N(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==N(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===N(t)?t:String(t)}var G=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&A(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=J(r);if(o){var n=J(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return function(e,t){if(t&&("object"===N(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return F(e)}(this,e)});function u(e){var t,n,r,o,a;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),r=F(n=i.call(this,e)),a=function(){H((t=F(n),J(u.prototype)),"setEventListeners",t).call(t),n._form.addEventListener("submit",(function(e){e.preventDefault(),n._handleProfileFormSubmit()}))},(o=M(o="setEventListeners"))in r?Object.defineProperty(r,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):r[o]=a,n._form=n._popup.querySelector(".popup__form"),n._submitButton=n._popup.querySelector(".popup__save-btn"),n}return t=u,(n=[{key:"handleDeleteConfirm",value:function(e){var t=e.handleProfileFormSubmit;this._handleProfileFormSubmit=t}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(m),z=document.querySelector(".profile__edit-button"),K=document.querySelector("#input-name"),Q=document.querySelector("#input-info"),W=document.querySelector(".profile__add-button"),X=(document.querySelector(".popup__big-image"),document.querySelector(".popup__big-title"),document.querySelector(".popup_image"),document.querySelector(".popup__form-profile")),Y=document.querySelector(".popup__form-card"),Z=document.querySelector(".popup__form-avatar"),$=".popup__save-btn",ee="Сохранение...",te=new s(n,X);te.enableValidation();var ne=new s(n,Y);ne.enableValidation();var re=new s(n,Z);re.enableValidation();var oe,ie=new x({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-62",headers:{authorization:"bc440bce-88d2-40de-813f-9186a5211a71","Content-Type":"application/json"}}),ue=new R({profileNameSelector:".profile__name",profileInfoSelector:".profile__text",avatarSelector:".profile__avatar"}),ae=new k(".popup_image"),ce=new G(".popup_delete"),le=new y({renderer:function(e){var t=pe(e).createNewCard();le.addItem(t)}},".elements__list");ie.getUserData().then((function(e){ue.setUserInfo({name:e.name,about:e.about}),ue.setUserAvatar({link:e.avatar}),oe=e._id,ie.getInitialCards().then((function(e){le.renderItems(e)})).catch((function(e){console.log(e)}))})).catch((function(e){return alert(e)}));var se=new I(".popup_profile",(function(t,n){var r=n.textContent;e(n,ee),ie.editUserData(t).then((function(e){ue.setUserInfo(e),se.close()})).catch((function(e){alert(e)})).finally((function(){e(n,r)}))}),$);z.addEventListener("click",(function(){var e=ue.getUserInfo();K.value=e.name,Q.value=e.info,te.resetValidation(),se.open()}));var fe=new I(".popup_card",(function(t,n){var r=n.textContent;e(n,ee),ie.createCard(t).then((function(e){pe(e),le.addItem(pe(e).createNewCard()),fe.close()})).catch((function(e){return alert(e)})).finally((function(){e(n,r)}))}),$);function pe(e){var n=new a(e,t,he,oe,{handleLikeCard:function(e){n.isLiked?ie.deleteLike(e._id).then((function(e){n.isLiked=!1,n.getLikesNumber(e.likes.length),n.likeCard()})).catch((function(e){console.log(e)})):ie.addLike(e).then((function(e){n.isLiked=!0,n.getLikesNumber(e.likes.length),n.likeCard()})).catch((function(e){console.log(e)}))}},{handleDeleteCard:function(e,t){ce.open(),ce.handleDeleteConfirm({handleProfileFormSubmit:function(){ie.deleteCard(e._id).then((function(){t.deleteCard(),ce.close()})).catch((function(e){console.log(e)}))}})}});return n}W.addEventListener("click",(function(){fe.open(),ne.resetValidation()}));var ye=new I(".popup_avatar",(function(t,n){var r=n.textContent;e(n,ee),ie.editUserAvatar(t.link).then((function(e){ue.setUserAvatar({link:e.avatar}),ye.close()})).catch((function(e){console.log(e)})).finally((function(){e(n,r)}))}),$);function he(e,t){ae.open(e,t)}document.querySelector(".profile__avatar-button").addEventListener("click",(function(){re.resetValidation(),ye.open()})),se.setEventListeners(),fe.setEventListeners(),ae.setEventListeners(),ye.setEventListeners(),ce.setEventListeners()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,